// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practica.TiendasAPI.DbContexts;

#nullable disable

namespace Practica.TiendasAPI.Migrations
{
    [DbContext(typeof(TiendaContext))]
    [Migration("20221121121014_first-migration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("Practica.TiendasAPI.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ShopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pan integral",
                            Price = 0.29999999999999999,
                            ShopId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Porción de bizcocho casero.",
                            Name = "Bizcocho",
                            Price = 0.29999999999999999,
                            ShopId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Botella de 1 litro de cerveza.",
                            Name = "Cruzcampo 1L",
                            Price = 1.0,
                            ShopId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Botella de 1 litro de agua.",
                            Name = "Agua 2L",
                            Price = 1.0,
                            ShopId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Botella de 1 litro de agua.",
                            Name = "Agua 2L",
                            Price = 1.2,
                            ShopId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "1 Kilogramo de tomates.",
                            Name = "Tomate",
                            Price = 1.99,
                            ShopId = 4
                        },
                        new
                        {
                            Id = 7,
                            Description = "1 Kilogramo de calabacín.",
                            Name = "Calabacín",
                            Price = 1.99,
                            ShopId = 4
                        });
                });

            modelBuilder.Entity("Practica.TiendasAPI.Entities.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tiendas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pan recién hecho.",
                            Name = "Panadería Paqui"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Todo a 1€.",
                            Name = "Bazar Todo a 1"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Supermercados MAS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Verdulería La Fresca"
                        });
                });

            modelBuilder.Entity("Practica.TiendasAPI.Entities.Producto", b =>
                {
                    b.HasOne("Practica.TiendasAPI.Entities.Tienda", "Shop")
                        .WithMany("Productos")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Practica.TiendasAPI.Entities.Tienda", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
